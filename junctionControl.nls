breed [junctions junction]
junctions-own [jc queue qpos]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                          initialize
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to junction-init
  if szenario = "indian"     [init-indian     ]
  if szenario = "constant"   [init-constant   ]
  if szenario = "traffic"    [init-traffic    ]
  if szenario = "cooperativ" [init-cooperativ ]
end

to init-indian
  ask links with [is_light = true][set color black set is_active true]
end

to init-constant
  ask junction_1 [set jc 24] ;geenwave 26 
  ask light_1 [
    set color green
    set is_active true
  ]
 
  ask junction_2 [set jc 11] ;; geenwave 12
  ask light_5 [
    set color green
    set is_active true
  ] 
  
  ask junction_3 [set jc 30] 
  ask light_7 [
    set color green
    set is_active true
  ] 
end

to init-traffic
  ask junction_1[
    set qpos light_1
    set queue 0
    ]
    ask junction_2[
    set qpos light_5
    set queue 0
    ]
    ask junction_3[
    set qpos light_7
    set queue 0
    ]
end

to init-cooperativ
  init-traffic
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;                      go functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
to jgo
  if szenario = "indian"     [              ];indian all lights ar green no toggeling
  if szenario = "constant"   [jt-constant   ]
  if szenario = "traffic"    [jt-traffic    ]
  if szenario = "cooperativ" [jt-cooperativ ]
end

to jt-constant
  foreach sort junctions [
    ask ? [
      ifelse jc <= 1 [
        set jc (get-jtt (?))
        ask links with [is_active = true and part_of_junction = ? ][
          tl
          ask next_light [
            tl
          ]  
        ]
      ];else
      [
        set jc (jc - 1)
      ]  
    ] 
  ]
end

to jt-traffic
  foreach sort junctions[
    ask ?[
      let pos qpos
      ifelse jc <= 1 [
        set jc (get-jtt (?))
        set queue 0
        ask links with [part_of_junction = ?][
          ifelse (self = pos)[
            
            set is_active true
            set color green
          ];esle
          [
            set is_active false
            set color red
          ]
        ]
      ];else
      [
        set jc (jc - 1)
      ]  
    ]
  ]   
end



to jt-cooperativ
    foreach sort junctions[
    ask ?[
      let t 0
      let pos qpos
      let q queue
      
      ;;;;;;;;;;;;;;;;;;;;;;;;;;
      ifelse jc <= 1 [
          
        ;set jc (get-jtt (?))
        set queue 0
        ask links with [part_of_junction = ?][
          
          
          ifelse (self = pos)[
            
            set t time
            set is_active true
            set color green
            set time 0
            
            if (self = light_1 and q > 3)[
              ask light_3 [set time (time + 6)]
            ]
          
            if ((self = light_3 or self = light_4 or self = light_5) and q > 5)[
              ask light_2 [set time (time + 6)]
              ask light_6 [set time (time + 6)]
            ]
          
            if ((self = light_7 or self = light_8) and q > 5)[ 
              ask light_4 [set time (time + 6)]
            ]
            
          ];esle
          [
            set is_active false
            set color red
          ]
        ] 
        print ((get-jtt (?)) + t)
        
        set jc ((get-jtt (?)) + t)
      ];else
      [
        set jc (jc - 1)
        
      ]  
    ] 
  ] 
end
 
 

to-report get-jtt [junction]
  let re 0
  if junction = junction_1 [
    set re jtt1
  ]
  if junction = junction_2 [
    set re jtt2 
  ]
  if junction = junction_3 [
    set re jtt3 
  ]
  report re
end

to toggle-light [light] 
  let a light
  ifelse [is_active] of a [
    ask a [
      set color red
      set is_active false
    ]
  ];else
  [
    ask a [
      set color green
      set is_active true
    ]
  ]
end

to tl 
  ifelse is_active [
      set color red
      set is_active false
  ];else
  [
      set color green
      set is_active true
  ]
end